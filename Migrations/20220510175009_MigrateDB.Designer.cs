// <auto-generated />
using EasyToEnter.ASP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyToEnter.ASP.Migrations
{
    [DbContext(typeof(EasyToEnterDbContext))]
    [Migration("20220510175009_MigrateDB")]
    partial class MigrateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.DirectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Direction");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.FocusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Focus");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.GroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ScienceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ScienceId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.LevelFocusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FocusId")
                        .HasColumnType("int");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FocusId");

                    b.HasIndex("LevelId", "FocusId")
                        .IsUnique();

                    b.ToTable("LevelFocus");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.LevelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Level");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.ScienceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Science");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.DirectionModel", b =>
                {
                    b.HasOne("EasyToEnter.ASP.Models.Models.GroupModel", "GroupModel")
                        .WithMany("Directions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.FocusModel", b =>
                {
                    b.HasOne("EasyToEnter.ASP.Models.Models.DirectionModel", "DirectionModel")
                        .WithMany("Focuss")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DirectionModel");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.GroupModel", b =>
                {
                    b.HasOne("EasyToEnter.ASP.Models.Models.ScienceModel", "ScienceModel")
                        .WithMany("Groups")
                        .HasForeignKey("ScienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScienceModel");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.LevelFocusModel", b =>
                {
                    b.HasOne("EasyToEnter.ASP.Models.Models.FocusModel", "FocusModel")
                        .WithMany("LevelFocuss")
                        .HasForeignKey("FocusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyToEnter.ASP.Models.Models.LevelModel", "LevelModel")
                        .WithMany("LevelFocuss")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FocusModel");

                    b.Navigation("LevelModel");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.DirectionModel", b =>
                {
                    b.Navigation("Focuss");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.FocusModel", b =>
                {
                    b.Navigation("LevelFocuss");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.GroupModel", b =>
                {
                    b.Navigation("Directions");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.LevelModel", b =>
                {
                    b.Navigation("LevelFocuss");
                });

            modelBuilder.Entity("EasyToEnter.ASP.Models.Models.ScienceModel", b =>
                {
                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
