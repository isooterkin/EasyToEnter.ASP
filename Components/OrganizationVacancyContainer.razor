@*Библиотеки*@
@using static EasyToEnter.ASP.Tools.StringConverting;
@using System.Linq;



@*Api*@
@inject EasyToEnter.ASP.Services.Vacancy.IVacancyService VacancyService;



<div class="bg-white rounded-20 shadow p-2 mb-3">
    @if (Model.Any())
    {
        <div class="row px-2 d-flex justify-content-center align-items-center">
            <div class="col btn">
                <div class="text-start">
                    Вакансии <small class="text-muted">(@Model.Count)</small>
                </div>
            </div>
            <a class="col-auto pl-0 pr-4 text-decoration-none" href="/EmployeeOrganization/NewVacancy">
                <span class="fs-5 bi bi-plus-circle text-success"/>
            </a>
        </div>
        <div class="collapse show" id="collapseVacancy">
            <div class="row mt-2">
                <div class="container">
                    @for (var i = 0; i < Model.Count; i++)
                    {
                        VacancyModel vacancy = Model[i];

                        <div class="rounded-20 shadow-sm bg-white mb-2 px-2" style="border: 1px solid #e6e6e6;">
                            <div class="row p-2 text-black d-flex justify-content-center align-items-center">
                                <a class="col text-truncate text-decoration-none text-black" href="/EmployeeOrganization/EditVacancy?vacancyId=@vacancy.Id">
                                    @vacancy.Name
                                </a>
                                <div class="col-auto">
                                    @IntToString(vacancy.Wages) <small class="text-muted"> рублей</small>
                                </div>
                                <a class="col-auto pl-0" href="" @onclick:preventDefault @onclick="(() => DeleteVacancy(vacancy))">
                                    <span class="fs-5 bi bi-trash text-danger"/>
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row px-2 d-flex justify-content-center align-items-center">
            <div class="col btn">
                <div class="text-start">
                    Вакансии <small class="text-muted">(нет)</small>
                </div>
            </div>
            <a class="col-auto pl-0 pr-4 text-decoration-none" href="/EmployeeOrganization/NewVacancy">
                <span class="fs-5 bi bi-plus-circle text-success"/>
            </a>
        </div>
    }
</div>



@code {

    [Parameter]
    public List<VacancyModel> Model { get; set; } = new List<VacancyModel>();

    private async Task DeleteVacancy(VacancyModel vacancy) 
    {
        bool result = await VacancyService.DeleteVacancy(vacancy);

        if (result) Model.Remove(vacancy);
    }
}